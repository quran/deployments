name: Kamal Deploy

on:
  # Automatic runs when code is pushed
  push:
    branches:
      - testing
      - staging
      - production

  # Manual runs from the GitHub UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: false
        default: production          # UI default
        type: choice
        options: [testing, staging, production]

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Map each branch to the matching Kamal environment name
    strategy:
      matrix:
        include:
          - branch: refs/heads/testing     # <‑‑ git ref
            env:    testing               # <‑‑ KAMAL_ENV + GitHub Environment
          - branch: refs/heads/staging
            env:    staging
          - branch: refs/heads/production
            env:    production    

    # Prevent parallel deployments to the same target
    concurrency:
      group: deploy-${{ matrix.env }}
      cancel-in-progress: true

    # Tells GitHub which "Environment" (Secrets/Protection rules) to use
    environment: ${{ matrix.env }}

    steps:
      - name: Checkout deployments repository
        uses: actions/checkout@v4

      - name: Determine if should deploy
        id: check
        run: |
          should_deploy="false"
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "${{ matrix.branch }}" ]]; then
            should_deploy="true"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.environment }}" == "${{ matrix.env }}" ]]; then
            should_deploy="true"
          fi
          echo "should_deploy=$should_deploy" >> $GITHUB_OUTPUT
          if [[ "$should_deploy" == "false" ]]; then
            echo "Skipping deployment for ${{ matrix.env }} (branch: ${{ matrix.branch }}) due to trigger conditions."
            echo "Event: ${{ github.event_name }}, Ref: ${{ github.ref }}, Input Env: ${{ github.event.inputs.environment }}"
          fi

      - name: Checkout quran.com-frontend-next
        uses: actions/checkout@v4
        if: steps.check.outputs.should_deploy == 'true'
        with:
          fetch-depth: 1
          repository: quran/quran.com-frontend-next
          ref: ${{ matrix.branch }}
          path: frontend
          sparse-checkout-cone-mode: false   # allow “!” exclusions
          sparse-checkout: |
            /*                     # pull everything ...
            !/public/fonts/        # ... except the fonts directory

      - uses: ruby/setup-ruby@v1
        if: steps.check.outputs.should_deploy == 'true'
        with:
          ruby-version: '3.3'      # pin Ruby, caches gems automatically

      - name: Install Kamal
        if: steps.check.outputs.should_deploy == 'true'
        run: gem install kamal -v 2.5.3

      - uses: webfactory/ssh-agent@v0.9.0
        if: steps.check.outputs.should_deploy == 'true'
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - uses: docker/setup-buildx-action@v3
        if: steps.check.outputs.should_deploy == 'true'

      - name: Deploy with Kamal
        if: steps.check.outputs.should_deploy == 'true'
        env:
          QURAN_FRONTEND_ENV_CONTENT: ${{ secrets.QURAN_FRONTEND_ENV_CONTENT }}
          KAMAL_GH_REGISTRY_PASSWORD: ${{ secrets.KAMAL_GH_REGISTRY_PASSWORD }}
        run: |
          # echo $PWD
          # ls -la
          # tree -L 2
          cp Dockerfile entrypoint.sh next.config.js server-http.mjs frontend
          kamal setup
          kamal deploy
